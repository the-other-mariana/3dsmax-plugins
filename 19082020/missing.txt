-- top faces
		last = 0
		for i in 1 to P_Sides by 1 do
		(
			if i == P_Sides then
			(
				last = P_Sides
			)
			faces[i + ((P_Sides * 2) * (tot_segs))] = [i + (P_Sides * (tot_segs)), (i + 1 + (P_Sides * (tot_segs))) - last, (P_Sides * (tot_segs + 1)) + 2]
		)
		
		-- bottom
-- 		last = 0
-- 		for i in 1 to P_Sides by 1 do
-- 		(
-- 			if i == P_Sides then
-- 			(
-- 				last = P_Sides
-- 			)
-- 			faces[i + ((P_Sides * 2) * (tot_segs)) + (P_Sides)] = [i, (P_Sides * (tot_segs + 1)) + 1,  i + 1 - last]
-- 		)